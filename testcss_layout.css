.caja{
    background-color: rgb(0, 60, 255);
    color: wheat;
    padding: 1em;
    border: 1px solid green;
}
.caja1{
    position: relative; /*para mover las cajas izquierda o derecha*/
    left: 2em;
    background-color: hotpink;
}
.caja2{
    position: absolute;
    right: 3em;
    background-color: khaki;
}
/*En FLEXBOX hay que poner en el padre DISPLAY: FLEX*/
/*cuando es un hijo y se usa relative "padre" y absolute "hijo", las medidas van con referencia a la position padre*/
/*position: fixed  para dejar una barra lateral o parte alta o baja sin que se mueva mientras bajamos la pagina con el scroll*/
/*position: sticky, se oculta cuando llega a un fixed*/
/*Block ocupa el 100% de la página,  como un bloque
INLINE, no hace separación, cuando acaba acaba sin mas. Los inline no hace caso a los margenes o alturas
excepto en margenes laterales.
INLINE BLOCK, en este su puede darse margenesm alturas y tamaños.
Z-INDEX, se usa con ABSOLUTE*/
/*FLEXBOX css flexbox  https://css-tricks.com/snippets/css/a-guide-to-flexbox/
Para Flexbox tiene que haber un contenedor
Con Display: FleX se ponen los contenedores en la misma línea, si no lo ponemos se ponen en columna
COLUMN, como si fuera por defecto, columna, pero se puede hacer más cosas
FLEX-WRAP, por defecto "nowrap" no salta a la siguiente línea, se adapta.
FLEX-WRAP: WRAP, salta a la siguiente línea si no cabe en el contenedor padre
FLEXBOX va en el padre.
JUSTIFY-CONTENT: flex-star, flex-end, flex-center para alinear las cajas
JUSTIFY-CONTENT: space-between para centrarlo con espacios
JUSTIFY-CONTENT: SPACE-AROUND, deja el mismo espacio entre cajas en la misma línea pero el 1º y el último pegados a las esquinas
JUSTIFY-CONTENT: SPACE-EVENLY, igual pero deja espacio en todas las cajas
*{BOX-SIZING: BORDER-BOX;} para que no cuente los bordes y paddings
Importante poner % en el WIDTH del Padre*/
 /*ALIGN-ITEMS: FLEX-START; en el Padre. Para que las cajas se queden pegadas arriba, abajo o en el medio
 ALIGN-CONTENT:FLEX-START, para que se junte a la caja de arriba